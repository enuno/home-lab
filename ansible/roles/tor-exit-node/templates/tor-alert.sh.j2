#!/bin/bash
# Tor Exit Node Alert Script
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -euo pipefail

# Configuration
ALERT_EMAIL="{{ tor_alert_email }}"
RELAY_NICKNAME="{{ tor_relay_nickname }}"
HOSTNAME="{{ ansible_hostname }}"

# Alert function
send_alert() {
    local subject="$1"
    local message="$2"

    if [ -n "${ALERT_EMAIL}" ]; then
        echo "${message}" | mail -s "[Tor Alert] ${subject} - ${RELAY_NICKNAME}" "${ALERT_EMAIL}"
    fi

    # Also log to syslog
    logger -t tor-alert -p daemon.warning "${subject}: ${message}"
}

# Check Tor service status
if ! systemctl is-active --quiet tor; then
    send_alert "Tor Service Down" "The Tor service on ${HOSTNAME} is not running. Please investigate immediately."
    exit 1
fi

# Check disk space
DISK_USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')
if [ "${DISK_USAGE}" -gt 90 ]; then
    send_alert "Disk Space Critical" "Disk usage on ${HOSTNAME} is at ${DISK_USAGE}%. Please free up space."
fi

# Check memory usage
MEM_USAGE=$(free | grep Mem | awk '{print int($3/$2 * 100)}')
if [ "${MEM_USAGE}" -gt 90 ]; then
    send_alert "Memory Usage High" "Memory usage on ${HOSTNAME} is at ${MEM_USAGE}%."
fi

# Check load average
LOAD=$(uptime | awk -F'load average:' '{print $2}' | awk '{print $1}' | sed 's/,//' | cut -d'.' -f1)
CPU_COUNT={{ ansible_processor_vcpus }}
if [ "${LOAD}" -gt $((CPU_COUNT * 2)) ]; then
    send_alert "High Load Average" "Load average on ${HOSTNAME} is ${LOAD}, which is high for ${CPU_COUNT} CPUs."
fi

# Check if Tor is listening on ORPort
if ! ss -tuln | grep -q ":{{ tor_or_port }}"; then
    send_alert "ORPort Not Listening" "Tor is not listening on ORPort {{ tor_or_port }} on ${HOSTNAME}."
fi

exit 0
